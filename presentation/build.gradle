import dependencies.AppConfig
import dependencies.Dependencies
import dependencies.Modules
import dependencies.Exclusions

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

check.dependsOn ktlint

android {
    compileSdkVersion AppConfig.compileSdkVersion

    defaultConfig {
        minSdkVersion AppConfig.minSdkVersion
        targetSdkVersion AppConfig.targetSdkVersion
        versionCode AppConfig.buildVersion
        versionName AppConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            debuggable true
        }

        qaTest {
            testCoverageEnabled true
            debuggable true
        }

        staging {
            testCoverageEnabled true
            debuggable true
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        animationsDisabled = true
        unitTests.returnDefaultValues = true
        unitTests.all {
            useJUnitPlatform()
            jacoco {
                destinationFile = file("$buildDir/jacoco/testDebugUnitTest.exec")
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    buildFeatures {
        viewBinding true
    }

    kotlinOptions {
        jvmTarget = AppConfig.jvmTarget
    }

    ndkVersion "21.0.6113669"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation Dependencies.Kotlin.standardLibrary

    testImplementation Dependencies.JUnit.junit
    androidTestImplementation Dependencies.Espresso.espressoCore
    androidTestImplementation Dependencies.Espresso.idlingResource
    implementation Dependencies.Espresso.idlingResource
    testImplementation Dependencies.JUnit5.jupiterApi
    testRuntimeOnly Dependencies.JUnit5.jupiterEngine
    testImplementation Dependencies.JUnit5.jupiterParams
    testImplementation Dependencies.Mockk.mockk
    testImplementation Dependencies.Coroutines.coroutinesTest
    kaptTest Dependencies.Hilt.hiltAndroidCompiler

    api Dependencies.Material.material
    api Dependencies.Lifecycle.extensions
    api Dependencies.Lifecycle.viewModel

    implementation Dependencies.Lottie.lottie
    implementation Dependencies.AppCompat.appCompat
    implementation Dependencies.AndroidX.coreKTX
    implementation Dependencies.ConstraintLayout.constraintLayout
    implementation Dependencies.VLC.libVLC
    implementation Dependencies.RecyclerView.recyclerView
    implementation Dependencies.PDF.pdfViewer
    implementation Dependencies.Hilt.hiltAndroid
    kapt Dependencies.Hilt.hiltAndroidCompiler
    kapt Dependencies.Hilt.hiltCompiler
    implementation Dependencies.Fragment.extensions
    implementation Dependencies.Hilt.hiltViewModel
    implementation Dependencies.Glide.glide

    api Dependencies.Coroutines.coroutinesAndroid
    api Dependencies.Coroutines.coroutinesCore

    implementation Dependencies.Base.androidCommons
    implementation Dependencies.Base.safeFleetUI

    implementation project(path: Modules.domain)
}

pitest {
    //Add Inspection exclusions since IntelliJ is sending invalid warnings for pitest plugin
    //noinspection GrFinalVariableAccess,GroovyAccessibility
    targetClasses = ["com.lawmobile.presentation.*"]
    //noinspection GrFinalVariableAccess,GroovyAccessibility
    targetTests = ["com.lawmobile.presentation.*"]
    //noinspection GrFinalVariableAccess,GroovyAccessibility
    excludedClasses = Exclusions.pitest
    testPlugin = 'junit5'
    threads = Runtime.getRuntime().availableProcessors()
    outputFormats = ["HTML", "XML"]
    avoidCallsTo = ["kotlin.jvm.internal", "kotlin/ResultKt"] //Stabilizes mutation run for Android
    enableDefaultIncrementalAnalysis =  true
    timestampedReports = false //Overwrite past mutation report
}