plugins {
    id 'java-library'
    id 'jacoco'
    id 'kotlin'
    id 'kotlin-kapt'
}

apply from: '../jacoco.gradle'
apply from: '../ktlint.gradle'
apply from: '../pitest-exceptions.gradle'
apply plugin: 'info.solidsoft.pitest'
check.dependsOn ktlint

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

task pitestDebug {
    group = 'Verification'
    dependsOn "pitest"
}

test {
    useJUnitPlatform()
    jacoco {
        destinationFile = file("$buildDir/jacoco/testDebugUnitTest.exec")
        includeNoLocationClasses = true
        excludes = ['jdk.internal.*']
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation "junit:junit:$junit_version"

    //Kotlin Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutine_android_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutine_core_version"

    // Junit5
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5_version"

    // Mock
    testImplementation "io.mockk:mockk:$mockk_version"

    //Coroutines-test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"

    //kotlin_commons
    api 'com.safefleet.mobile:kotlin-commons:1.0.0-SNAPSHOT@jar'
}

task testDebugUnitTest {
    group = 'Verification'
    dependsOn test
}

pitest {
    //Add Inspection exclusions since IntelliJ is sending invalid warnings for pitest plugin
    //noinspection GrFinalVariableAccess,GroovyAccessibility
    targetClasses = ["com.lawmobile.domain.*"]
    //noinspection GrFinalVariableAccess,GroovyAccessibility
    targetTests = ["com.lawmobile.domain.*"]
    //noinspection GrFinalVariableAccess,GroovyAccessibility
    excludedClasses = pitestExclusions
    testPlugin = 'junit5'
    threads = Runtime.getRuntime().availableProcessors()
    outputFormats = ['XML', 'HTML']
    enableDefaultIncrementalAnalysis =  true
    timestampedReports = false
}