// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    apply from: "versions.gradle"
    repositories {
        //mavenLocal()
        google()
        jcenter()
        maven {
            credentials {
                username = nexusUsername
                password = nexusPassword
            }
            url "https://nexus.vmaxlive.net/repository/maven-public/"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }
    configurations.maybeCreate('pitest')
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:$sonar_version"
        classpath "org.jacoco:org.jacoco.core:$jacoco_version"
        classpath "pl.droidsonroids.gradle:gradle-pitest-plugin:$pitest_plugin_version"
        pitest "org.pitest:pitest-junit5-plugin:$pitest_junit5_plugin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "org.sonarqube" version "2.7"
}

apply from: "sonar.gradle"

allprojects {
    repositories {
        //mavenLocal()
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        maven {
            credentials {
                username = nexusUsername
                password = nexusPassword
            }
            url "https://nexus.vmaxlive.net/repository/maven-public/"
        }
    }
}

subprojects {
    if (name.matches("data|presentation|domain")) {
        apply plugin: 'pl.droidsonroids.pitest'
        pitest {
            testPlugin = 'junit5'
            threads = Runtime.getRuntime().availableProcessors()
            outputFormats = ["HTML", "XML"]
            avoidCallsTo = ["kotlin.jvm.internal", "kotlin/ResultKt"] //Stabilizes mutation run for Android
            enableDefaultIncrementalAnalysis =  true
            timestampedReports = false //Overwrite past mutation report
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
