import dependencies.AppConfig
import dependencies.Dependencies
import dependencies.Modules

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.squareup.sqldelight'
}

check.dependsOn ktlint

android {
    compileSdkVersion AppConfig.compileSdkVersion

    defaultConfig {
        applicationId AppConfig.applicationId
        minSdkVersion AppConfig.minSdkVersion
        targetSdkVersion AppConfig.targetSdkVersion
        versionCode AppConfig.buildVersion
        versionName AppConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    packagingOptions {
        pickFirst '**/*.so'
    }

    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEYSTORE_ALIAS")
            keyPassword System.getenv("KEYSTORE_PASSWORD")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            testCoverageEnabled true
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled = true
        unitTests {
            includeAndroidResources = true
        }
    }

    kotlinOptions {
        jvmTarget = AppConfig.jvmTarget
    }

    configurations.all {
        resolutionStrategy.force Dependencies.Google.findBugs
    }

    compileOptions {
        sourceCompatibility AppConfig.jvmTarget
        targetCompatibility AppConfig.jvmTarget
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation Dependencies.Kotlin.standardLibrary
    implementation Dependencies.AppCompat.appCompat
    implementation Dependencies.AndroidX.coreKTX

    testImplementation Dependencies.JUnit.junit
    androidTestImplementation Dependencies.Mockk.mockkAndroid
    androidTestImplementation Dependencies.Espresso.espressoCore
    androidTestImplementation Dependencies.Espresso.intents
    androidTestImplementation Dependencies.UIAutomator.uiAutomator
    androidTestImplementation Dependencies.Espresso.idlingResource
    androidTestImplementation Dependencies.AndroidX.testRunner
    androidTestImplementation Dependencies.AndroidX.testRules
    androidTestImplementation Dependencies.AndroidX.testExtJunit
    androidTestUtil Dependencies.AndroidX.testOrchestrator
    kaptAndroidTest Dependencies.Hilt.hiltAndroidCompiler
    kaptAndroidTest Dependencies.Hilt.hiltCompiler
    kaptTest Dependencies.Hilt.hiltAndroidCompiler
    implementation Dependencies.Espresso.idlingResource

    androidTestImplementation(Dependencies.Barista.barista) {
        exclude group: 'org.jetbrains.kotlin'
    }

    implementation Dependencies.VLC.libVLC
    implementation Dependencies.Google.gson
    implementation Dependencies.Hilt.hiltAndroid
    kapt Dependencies.Hilt.hiltAndroidCompiler

    implementation Dependencies.Hilt.hiltViewModel
    kapt Dependencies.Hilt.hiltCompiler

    // Import the Firebase BoM
    /*debugApi platform(Dependencies.Firebase.bom)
    debugApi Dependencies.Firebase.analytics
    debugApi Dependencies.Firebase.crashlytics*/

    //Base repository
    implementation Dependencies.Base.externalHardware
    implementation Dependencies.Base.androidCommons
    implementation Dependencies.Base.safeFleetUI

    implementation Dependencies.SqlDelight.androidDriver
    implementation Dependencies.SqlDelight.sqlDelightDriver

    implementation project(path: Modules.presentation)
    implementation project(path: Modules.data)
    implementation project(path: Modules.domain)
    implementation project(path: Modules.database)
}
